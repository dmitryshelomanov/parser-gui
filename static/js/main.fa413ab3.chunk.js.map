{"version":3,"sources":["lib/gui/tree.ts","lib/gui/flatten-tree.ts","lib/babel/executors.ts","lib/gui/index.ts","ui/styles.ts","lib/overlay.tsx","assets/mock.ts","features/web-preview/preview.tsx","lib/parser.ts","lib/xpath.ts","ui/organisms/Modal.tsx","ui/organisms/stub.tsx","ui/organisms/loyout.tsx","features/token-creator/models/tokens.ts","features/token-creator/models/mock.ts","features/token-creator/models/editors.ts","lib/codegen/prettier.ts","lib/codegen/tokens.ts","features/token-creator/Modal.tsx","features/common/components/nodes/elements.tsx","features/common/components/nodes/tree.tsx","features/token-creator/list/Notice.tsx","features/token-creator/list/tokens.tsx","lib/editor.tsx","lib/codegen/libs.ts","features/token-creator/list/editors.tsx","features/code-preview/preview.tsx","pages/home/page.tsx","pages/index.tsx","index.tsx","lib/babel/traverse.ts"],"names":["tree","toTree","roots","flattenTree","parentXpath","reduce","acc","it","children","map","child","xpath","fullXpath","traverse","nodes","mapper","finderByXpath","token","length","rs","name","parentId","ob","base","queue","Object","keys","key","parents","shift","target","targetSeatled","i","destination","parent","Array","isArray","start","Math","floor","end","chunk","slice","push","nextKey","toSplittedArray","create","scheme","addChild","addToken","removeToken","tokenId","removedToken","idsForRemove","filter","Boolean","nextState","omit","extractRoots","executeTransformer","code","args","libs","getFunctionFromCode","body","result","params","importedLibs","getImportsFromGUI","libsSource","lib","fn","eval","join","error","toString","GlobalStyle","createGlobalStyle","overlayContext","createContext","overlayComponentContext","overlayTargetContext","block","backgroundColor","position","width","height","top","left","zIndex","pointerEvents","getElementBounging","rect","nodeName","range","ownerDocument","createRange","selectNode","getBoundingClientRect","detach","getRect","scrollTop","scrollLeft","OverlayProvider","elementClicked","useState","styles","setStyles","refElementClicked","useRef","root","setRoot","targetElement","setTargetElement","resetStyles","useCallback","useEffect","lastElement","moveHandler","event","localName","currentStyles","prev","prevLeave","onmouseleave","clickHandler","preventDefault","current","addEventListener","removeEventListener","overlay","style","useOverlayFacade","changeOverlayStyles","action","type","next","payload","omittedOverlay","useMemo","Provider","value","useOverlay","useContext","ActiveNodeGuard","memo","isActive","x","y","WithActivePreviewNode","currentNode","Iframe","styled","iframe","WebPreview","ref","setRef","jsx","mountNode","props","src","onLoad","contentWindow","document","console","log","createPortal","nodeParser","elements","WeakMap","id","node","childNodes","parentNode","parentElement","get","attrs","attributes","nodeInfo","textContent","replace","trim","set","unshift","getElementFromXPath","path","targert","nodesSnapshot","evaluate","XPathResult","ORDERED_NODE_SNAPSHOT_TYPE","snapshotLength","snapshotItem","getXpathFromElement","el","nodeType","sames","call","tagName","toLowerCase","indexOf","ModalUI","isOpened","closeModal","onConfirm","confirmLabel","Dialog","isShown","title","onCloseComplete","div","Heading","Col","p","jc","ai","Row","createEvent","addChildren","$tokensScheme","createStore","currentPosition","expirience","company","on","$rootTokens","$tokensCounter","tokens","$tokensTree","combine","initalState","opened","notice","wrapp","f","parser","plugins","plugin","openEditor","closeEditor","changeCode","$editors","state","$openedEditors","editors","PaneUI","Pane","PaneSettings","FormWrapper","TokenModal","onClose","parentToken","tokenName","setTokenName","xpathPart","setXpathPart","Label","Text","JSON","stringify","find","TextInput","onChange","placeholder","colors","TagWrapper","lvl","css","TextWrapper","isComment","AttributesWrapper","span","TreeContainer","pre","Tag","onLeave","onHover","onMouseEnter","onMouseLeave","color","text","Comment","NodeTree","nodeList","draft","onClick","NoticeWrapper","InspectorWrapper","Notice","setOpened","ChevronDownIcon","ChevronRightIcon","data","expandLevel","TokensWrapper","ShortInformation","Additional","Icons","ChildrenWrapper","TokenItem","visible","setVisible","parsed","selectedNode","setSelectedNode","toggleVisible","border","ChevronUpIcon","RemoveIcon","TokensList","tokensTree","useStore","elementFinder","Wrapper","CodeEditor","nextValue","mode","theme","editorProps","$blockScrolling","setOptions","enableBasicAutocompletion","enableLiveAutocompletion","enableSnippets","showLineNumbers","tabSize","defaultLibs","$$element","element","selector","querySelectorAll","$element","findedElement","querySelector","Error","classList","textExtractor","EditorWrapper","CloseEditorIcon","parsedId","split","CrossIcon","margin","setResult","useStoreMap","store","Button","TokenEditor","CodePreview","random","TablistUI","Tablist","Title","HomePage","openedEditors","setElement","selectedTabName","setSelectedTabName","counter","tabs","selectedIndex","findIndex","tab","watch","size","background","marginRight","index","Tab","onSelect","isSelected","aria-controls","Pill","display","startsWith","condition","Paragraph","RootRouter","component","getElementById","ReactDOM","render","ast","parse","sourceType","FunctionDeclaration","generate","param","isImportSpecifier","ImportDeclaration","source","specifiers","imported"],"mappings":"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","file":"static/js/main.fa413ab3.chunk.js","sourcesContent":["import { Token, FullToken } from \"./types\";\n\nfunction toTree(\n  roots: Token[],\n  flattenTree: Record<string, Token>,\n  // @ts-ignore\n  parentXpath?: string = \"\"\n): FullToken[] {\n  return roots.reduce(\n    (acc: any[], it) => [\n      ...acc,\n      {\n        ...it,\n        children: toTree(\n          it.children.map((child) => flattenTree[child]),\n          flattenTree,\n          parentXpath + it.xpath\n        ),\n        fullXpath: parentXpath + it.xpath,\n      },\n    ],\n    []\n  );\n}\n\ntype Props<Result> = {\n  mapper: (elements: HTMLElement[]) => Result[];\n  finderByXpath: (xpath: string) => HTMLElement[];\n  parentNodesCount?: number;\n};\n\ntype T = Record<string, any | T[]>;\n\nfunction toSplittedArray(ob: T, base: number) {\n  const rs: any = [];\n  const queue = [\n    ...Object.keys(ob).map((key) => ({ key, parents: [] as string[] })),\n  ];\n\n  while (queue.length > 0) {\n    const { key, parents } = queue.shift()!;\n    let target = { ...ob };\n    let targetSeatled = false;\n\n    for (let i = 0; i < base; i++) {\n      if (!rs[i]) {\n        rs[i] = {};\n      }\n\n      let destination = rs[i];\n\n      for (let parentId = 0; parentId < parents.length; parentId++) {\n        const parent = parents[parentId];\n\n        destination = destination[parent];\n\n        if (!targetSeatled && !Array.isArray(ob[parent])) {\n          target = { ...target[parent] };\n          targetSeatled = true;\n        }\n      }\n\n      if (Array.isArray(target[key])) {\n        const start = i * Math.floor(target[key].length / base);\n        const end = Math.floor(target[key].length / base) * (i + 1);\n        const chunk = target[key].slice(start, end);\n\n        destination[key] = chunk.length === 1 ? chunk[0] : chunk;\n      } else {\n        destination[key] = { ...target[key] };\n      }\n    }\n\n    if (target[key] && !Array.isArray(target[key])) {\n      queue.push(\n        ...Object.keys(target[key]).map((nextKey) => ({\n          key: nextKey,\n          parents: [...parents, key],\n        }))\n      );\n    }\n  }\n\n  return rs;\n}\n\nfunction traverse<Result>(\n  nodes: FullToken[],\n  { mapper, finderByXpath }: Props<Result>\n): any {\n  return nodes.reduce((acc, token) => {\n    const nodes = finderByXpath(token.fullXpath);\n\n    if (token.children.length === 0) {\n      const rs = mapper(nodes);\n\n      return {\n        ...acc,\n        [token.name]: rs.length > 1 ? rs : rs[0] ?? {},\n      };\n    }\n\n    return {\n      ...acc,\n      [token.name]:\n        nodes.length > 1 && !token.parentId\n          ? toSplittedArray(\n              traverse(token.children, {\n                mapper,\n                finderByXpath,\n              }),\n              nodes.length\n            )\n          : traverse(token.children, {\n              mapper,\n              finderByXpath,\n            }),\n    };\n  }, {});\n}\n\nexport const tree = {\n  toTree,\n  traverse,\n};\n","import { omit } from \"lodash\";\nimport { TokensScheme, Token } from \"./types\";\n\nfunction create(scheme?: TokensScheme): TokensScheme {\n  return scheme ?? {};\n}\n\nfunction addToken({\n  tree,\n  token,\n}: {\n  tree: TokensScheme;\n  token: Omit<Token, \"children\">;\n}) {\n  return {\n    ...tree,\n    [token.name]: { ...token, children: [] },\n  };\n}\n\nfunction addChild({\n  tree,\n  token,\n  parentId,\n}: {\n  tree: TokensScheme;\n  token: Omit<Token, \"children\">;\n  parentId: string;\n}) {\n  return {\n    ...tree,\n    [parentId]: {\n      ...tree[parentId],\n      children: [...tree[parentId].children, token.name],\n    },\n    [token.name]: { ...token, children: [], parentId },\n  };\n}\n\nfunction removeToken({\n  tree,\n  tokenId,\n  parentId,\n}: {\n  tree: TokensScheme;\n  tokenId: string;\n  parentId?: string;\n}) {\n  const { [tokenId]: removedToken } = tree;\n\n  const idsForRemove = [tokenId, ...removedToken.children].filter(Boolean);\n\n  const nextState = omit(tree, idsForRemove) as TokensScheme;\n\n  if (parentId && nextState[parentId]) {\n    return {\n      ...nextState,\n      [parentId]: {\n        ...nextState[parentId],\n        children: nextState[parentId].children.filter((it) => it !== tokenId),\n      },\n    };\n  }\n\n  return nextState;\n}\n\nfunction extractRoots(scheme: TokensScheme) {\n  const rootTokens = Object.keys(scheme)\n    .filter((key) => !scheme[key].parentId)\n    .map((key) => scheme[key]);\n\n  return rootTokens;\n}\n\nexport const flattenTree = {\n  create,\n  addChild,\n  addToken,\n  removeToken,\n  extractRoots,\n};\n","import { getFunctionFromCode, getImportsFromGUI } from \"./traverse\";\n\nexport function executeTransformer({\n  code,\n  args,\n  libs,\n}: {\n  code: string;\n  args: unknown[];\n  libs: Record<string, unknown>;\n}) {\n  try {\n    const { result, params } = getFunctionFromCode({\n      code,\n      name: \"transformer\",\n      body: true,\n    });\n\n    const importedLibs = getImportsFromGUI({ code });\n\n    const libsSource = importedLibs.reduce(\n      (acc, lib) => (libs[lib] ? `${acc} \\n const ${lib} = ${libs[lib]}` : acc),\n      \"\"\n    );\n\n    const fn = eval(`(${params.join()}) => {\n      ${libsSource}\n      ${result.slice(1)}  \n    `);\n\n    return fn(args);\n  } catch (error) {\n    // @ts-ignore\n    return error.toString();\n  }\n}\n","export * from \"./tree\";\nexport * from \"./types\";\nexport * from \"./flatten-tree\";\n\nvar tree = {\n  champ: {\n    xpath:\n      \"/html/body/app-root/main/div/app-events-line/div[2]/div[2]/div[1]/div[1]/div[2]/h2/a\",\n    name: \"champ\",\n    children: [],\n  },\n  main: {\n    xpath:\n      \"/html/body/app-root/main/div/app-events-line/div[2]/div[2]/div[1]/app-line-event-unit/div\",\n    name: \"main\",\n    children: [\"time\", \"teams\", \"mainCoefs\"],\n  },\n  time: {\n    xpath: \"/span[1]/span[1]\",\n    name: \"time\",\n    children: [],\n    parentId: \"main\",\n  },\n  teams: {\n    xpath: \"/a[1]/span[1]/b\",\n    name: \"teams\",\n    children: [],\n    parentId: \"main\",\n  },\n  mainCoefs: {\n    xpath: \" //app-line-main-dops-container/div[button and span]/*\",\n    name: \"mainCoefs\",\n    children: [],\n    parentId: \"main\",\n  },\n  mainCoefTitles: {\n    xpath:\n      \"/html/body/app-root/main/div/app-events-line/div[2]/div[1]/*[position()>1]\",\n    name: \"mainCoefTitles\",\n    children: [],\n  },\n};\n","import { createGlobalStyle } from \"styled-components\";\n\nexport const GlobalStyle = createGlobalStyle`\n  body {\n    margin: 0;\n  }\n\n  #root {\n    height: 100vh\n  }\n\n  pre {\n    white-space: normal;\n  }\n\n  .Resizer {\n    background: #000;\n    opacity: 0.2;\n    z-index: 1;\n    -moz-box-sizing: border-box;\n    -webkit-box-sizing: border-box;\n    box-sizing: border-box;\n    -moz-background-clip: padding;\n    -webkit-background-clip: padding;\n    background-clip: padding-box;\n  }\n\n  .Resizer:hover {\n    -webkit-transition: all 2s ease;\n    transition: all 2s ease;\n  }\n \n  .Resizer.horizontal {\n    height: 11px;\n    margin: -5px 0;\n    border-top: 5px solid rgba(255, 255, 255, 0);\n    border-bottom: 5px solid rgba(255, 255, 255, 0);\n    cursor: row-resize;\n    width: 100%;\n  }\n  \n  .Resizer.horizontal:hover {\n    border-top: 5px solid rgba(0, 0, 0, 0.5);\n    border-bottom: 5px solid rgba(0, 0, 0, 0.5);\n  }\n  \n  .Resizer.vertical {\n    width: 11px;\n    margin: 0 -5px;\n    border-left: 5px solid rgba(255, 255, 255, 0);\n    border-right: 5px solid rgba(255, 255, 255, 0);\n    cursor: col-resize;\n  }\n  \n  .Resizer.vertical:hover {\n    border-left: 5px solid rgba(0, 0, 0, 0.5);\n    border-right: 5px solid rgba(0, 0, 0, 0.5);\n  }\n  .Resizer.disabled {\n    cursor: not-allowed;\n  }\n  .Resizer.disabled:hover {\n    border-color: transparent;\n  }\n`;\n","import {\n  createContext,\n  memo,\n  useCallback,\n  useContext,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from \"react\";\n\nexport type OverlayChange =\n  | { type: \"reset\"; payload?: {} }\n  | { type: \"set\"; payload: HTMLElement };\n\nconst overlayContext = createContext(\n  {} as Omit<OverlayResult, \"overlay\" | \"targetElement\">\n);\nconst overlayComponentContext = createContext<JSX.Element | null>(null);\nconst overlayTargetContext = createContext<HTMLElement | null>(null);\n\nexport type OverlayResult = {\n  overlay: JSX.Element;\n  setRoot: (ar0: Document) => void;\n  setStyles: (\n    fn: (\n      ar0: Record<string, string | number>\n    ) => Record<string, string | number>\n  ) => void;\n  resetStyles: () => void;\n  root?: Document;\n  targetElement: HTMLElement | null;\n  changeOverlayStyles: (arg0: OverlayChange) => void;\n};\n\ntype OverlayParams = {\n  elementClicked: (element: HTMLElement) => void;\n};\n\nconst block = {\n  backgroundColor: \"rgb(202 0 0 / 40%)\",\n  position: \"fixed\" as const,\n  width: 0,\n  height: 0,\n  top: 0,\n  left: 0,\n  zIndex: 999999999,\n  pointerEvents: \"none\" as const,\n};\n\nfunction getRect(target: HTMLElement) {\n  if (target.nodeName === \"#text\" || target.nodeName === \"#comment\") {\n    const range = target.ownerDocument.createRange();\n    range.selectNode(target);\n\n    const rect = range.getBoundingClientRect();\n    range.detach();\n\n    return rect;\n  }\n\n  const rect = target.getBoundingClientRect();\n\n  return rect;\n}\n\nexport function getElementBounging(target: HTMLElement) {\n  const rect = getRect(target);\n\n  return {\n    width: rect.width,\n    height: rect.height,\n    top: rect.top + target.scrollTop,\n    left: rect.left + target.scrollLeft,\n  };\n}\n\nexport function useOverlayFacade({\n  elementClicked,\n}: OverlayParams): OverlayResult {\n  const [styles, setStyles] = useState(block);\n  const refElementClicked = useRef(elementClicked);\n  const [root, setRoot] = useState<Document>();\n  const [targetElement, setTargetElement] = useState<HTMLElement | null>();\n\n  const resetStyles = useCallback(() => {\n    setStyles(block);\n  }, []);\n\n  useEffect(() => {\n    if (root) {\n      let lastElement: HTMLElement | null = null;\n\n      const moveHandler = (event: MouseEvent & { target: HTMLElement }) => {\n        const { target } = event;\n\n        if (target && lastElement !== target && target.localName !== \"html\") {\n          const currentStyles = getElementBounging(target);\n\n          setStyles((prev) => ({\n            ...prev,\n            ...currentStyles,\n          }));\n\n          const prevLeave = target.onmouseleave;\n\n          target.onmouseleave = () => {\n            lastElement = null;\n            setStyles(block);\n            setTargetElement(null);\n            target.onmouseleave = prevLeave;\n          };\n\n          lastElement = target;\n          setTargetElement(target);\n        }\n      };\n\n      const clickHandler = (event: MouseEvent & { target: HTMLElement }) => {\n        event.preventDefault();\n\n        if (refElementClicked.current) {\n          refElementClicked.current(event.target);\n        }\n      };\n\n      // @ts-ignore\n      root.addEventListener(\"mousemove\", moveHandler);\n      // @ts-ignore\n      root.addEventListener(\"click\", clickHandler);\n\n      return () => {\n        // @ts-ignore\n        root.removeEventListener(\"mousemove\", moveHandler);\n        // @ts-ignore\n        root.removeEventListener(\"click\", clickHandler);\n      };\n    }\n  }, [root, setStyles]);\n\n  if (refElementClicked.current !== elementClicked) {\n    refElementClicked.current = elementClicked;\n  }\n\n  return {\n    overlay: <div style={styles} />,\n    setRoot,\n    // @ts-ignore\n    setStyles,\n    resetStyles,\n    root,\n    targetElement: targetElement ?? null,\n  };\n}\n\nexport function OverlayProvider({\n  children,\n  ...props\n}: { children: JSX.Element } & OverlayParams) {\n  const { overlay, setRoot, setStyles, resetStyles, root, targetElement } =\n    useOverlayFacade(props);\n\n  const changeOverlayStyles = useCallback(\n    (action: OverlayChange) => {\n      if (action.type === \"set\") {\n        const next = getElementBounging(action.payload);\n\n        setStyles((prev) => ({ ...prev, ...next }));\n      } else {\n        resetStyles();\n      }\n    },\n    [setStyles, resetStyles]\n  );\n\n  const omittedOverlay = useMemo(() => {\n    return {\n      setRoot,\n      setStyles,\n      resetStyles,\n      root,\n      changeOverlayStyles,\n    };\n  }, [setRoot, setStyles, resetStyles, root, changeOverlayStyles]);\n\n  return (\n    <overlayContext.Provider value={omittedOverlay}>\n      <overlayComponentContext.Provider value={overlay}>\n        <overlayTargetContext.Provider value={targetElement}>\n          {children}\n        </overlayTargetContext.Provider>\n      </overlayComponentContext.Provider>\n    </overlayContext.Provider>\n  );\n}\n\nexport function useOverlay() {\n  const overlay = useContext(overlayContext);\n\n  return overlay;\n}\n\nexport function useOverlayTargetElement() {\n  const target = useContext(overlayTargetContext);\n\n  return target;\n}\n\nexport function useOverlayComponent() {\n  const overlay = useContext(overlayComponentContext);\n\n  return overlay;\n}\n\nconst ActiveNodeGuard = memo(\n  ({\n    children,\n    isActive,\n  }: {\n    children: (arg0: boolean) => JSX.Element;\n    isActive: boolean;\n  }) => children(isActive),\n  (x, y) => x.isActive === y.isActive\n);\n\nexport function WithActivePreviewNode({\n  children,\n  currentNode,\n}: {\n  children: (arg0: boolean) => JSX.Element;\n  currentNode: HTMLElement;\n}) {\n  const targetElement = useOverlayTargetElement();\n\n  return (\n    <ActiveNodeGuard isActive={currentNode === targetElement}>\n      {children}\n    </ActiveNodeGuard>\n  );\n}\n","export const html = `\n<html lang=\"en\"><head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n  <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n  <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/normalize/8.0.1/normalize.min.css\">\n  <link rel=\"stylesheet\" href=\"style.css\">\n  <title>CV</title>\n</head>\n\n<body>\n  <canvas></canvas>\n  <div class=\"container\">\n    <div class=\"bio\">\n      <img src=\"avatar.jpg\" draggable=\"false\">\n      <div class=\"position\">\n        <h1>Шеломанов Дмитрий</h1>\n        <p>Frontend engineer</p>\n        <div class=\"social\">\n          <a href=\"https://vk.com/dmitryshelomanov\" target=\"_blank\">vk</a>\n          <a href=\"malito:dmitryshelomanov@mail.ru\" target=\"_blank\">email</a>\n          <a href=\"https://github.com/dmitryshelomanov\" target=\"_blank\">github</a>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col production\">\n        <h2>Опыт работы</h2>\n\n        <div class=\"expirience\">\n          <h3>ООО БК «Олимп»</h3>\n          <p class=\"title\">- Senior Frontend Developer (Июнь 2020 - по настоящее время)</p>\n          <p>Обязанности:</p>\n          <ul>\n            <li>Разработка мобильной и десктопной версии сайта</li>\n            <li>\n              Разработка SDK для написания таких же букмекерских контор <br>\n              (Можно подключать логику и кастомизировать, не важно что отвечает за рендер)\n            </li>\n            <li>Внедрил ревью кода и фиче бранчи</li>\n            <li>Внедрил тестирование</li>\n          </ul>\n          <p>Достижения:</p>\n          <ul>\n            <li>Разработан гибкий SDK</li>\n            <li>Разработана система компонентов</li>\n            <li>Переписал старый код с использованием SDK</li>\n            <li>Успешно внедрены новые архитектурные решения</li>\n          </ul>\n          <p>Используемые технологии:</p>\n          <ul>\n            <li>HTML, CSS</li>\n            <li>JS, ES6</li>\n            <li>React, Styled Components, Effector, Typescript</li>\n            <li>Webpack</li>\n          </ul>\n        </div>\n    \n        <div class=\"expirience\">\n          <h3>ООО «Диалог»</h3>\n          <p class=\"title\">- Senior Frontend Developer (Май 2019 - Август 2020)</p>\n          <p>Обязанности:</p>\n          <ul>\n            <li>Покрытие тестами ui кита.</li>\n            <li>Покрытие тестами платформу (dialog-web-platform).</li>\n            <li>Разработка модулей для платформы.</li>\n            <li>Участие в разработке архитектуры.</li>\n            <li>Участие в ревью кода.</li>\n          </ul>\n          <p>Достижения:</p>\n          <ul>\n            <li>\n              Разработан модуль поиска групп и пользователей (локально плюс\n              глобально).\n            </li>\n            <li>Разработана система настроек.</li>\n            <li>Созданы компоненты для виртуализации и мульти селекта.</li>\n            <li>Внедрен просмотрщик изображений.</li>\n            <li>\n              Внедрены решения по архитектуре (работа с браузерной бд плюс\n              локальный стейт).\n            </li>\n          </ul>\n          <p>Используемые технологии:</p>\n          <ul>\n            <li>HTML, CSS</li>\n            <li>JS, ES6</li>\n            <li>React, AstroTurf, RxJs, RxDb, Flow, Testing-library</li>\n            <li>Webpack, Lerna</li>\n          </ul>\n        </div>\n    \n        <div class=\"expirience\">\n          <h3>Unitemp</h3>\n          <p class=\"title\">- Старший разработчик (Февраль 2018 - Май 2019)</p>\n          <p>Обязанности:</p>\n          <ul>\n            <li>Написание кроссплатформенного приложения на React native.</li>\n            <li>Разработка архитектуры с нуля для приложения.</li>\n            <li>Поиск багов и форк сторонних библиотек.</li>\n            <li>Написание собственных библиотек в open source.</li>\n          </ul>\n          <p>Используемые технологии:</p>\n          <ul>\n            <li>JS, ES6</li>\n            <li>React Native</li>\n            <li>redux, redux-thunk, recompose, нативные библиотеки</li>\n          </ul>\n        </div>\n    \n        <div class=\"expirience\">\n          <h3>ООО \"Мир Идей\"</h3>\n          <p class=\"title\">- Web developer (Июль 2017 - Февраль 2018)</p>\n          <p>Обязанности:</p>\n          <ul>\n            <li>Верстка лендингов.</li>\n            <li>Разработка spa на vue js.</li>\n            <li>Поддержка существующих проектов.</li>\n            <li>Разработка платформы для обработки баннеров.</li>\n          </ul>\n          <p>Используемые технологии:</p>\n          <ul>\n            <li>HTML, CSS</li>\n            <li>JS, ES6, PHP</li>\n            <li>Vue, React, laravel</li>\n            <li>Webpack, redux, redux-thunk</li>\n          </ul>\n        </div>\n      </div>\n\n      <div class=\"col pet\">\n        <h2>О себе</h2>\n\n        <p>\n          Frontend Developer с опытом разработки мобильных приложений на React Native.\n          Увлекаюсь новыми языками программирования (из последних Rust, Haskell, Reason).\n          Изучаю Computer Science. Помогаю новичкам и пытаюсь писать статьи. В дальнейшем хотел бы попробовать вести курсы.\n        </p>\n\n        <div class=\"expirience\">\n          <h3>Explory (совместный стартап)</h3>\n          <p class=\"title\">-</p>\n          <p>Обязанности:</p>\n          <ul>\n            <li>Разработка приложения на React Native</li>\n          </ul>\n          <p>Достижения:</p>\n          <ul>\n            <li>Написано большое приожения (порядка 80 экранов)</li>\n            <li>Написано много интенесных решений внутри приложения</li>\n            <li>Написано решение для сокетного апи</li>\n            <li>Попробовался в роли лида в мобильной разработке</li>\n          </ul>\n          <p>Используемые технологии:</p>\n          <ul>\n            <li>React Native, Styled-components</li>\n            <li>Effector</li>\n            <li>Typescript</li>\n          </ul>\n          <a href=\"https://apps.apple.com/ru/app/explory/id1512117513\" target=\"_blank\">ios</a>\n          <a href=\"https://play.google.com/store/apps/details?id=io.explory\" target=\"_blank\">andoid</a> \n        </div>\n    \n        <h3>Демо проекты (которые возможно было задеплоить)</h3>\n    \n        <div class=\"projects\">\n          <div>\n            <a href=\"https://dmitryshelomanov.github.io/reason-game-of-life/\" target=\"_blank\">Game of Live</a>\n            <p>\n              Классическая игра жизнь. Написана на языке программирования Reason\n            </p>\n          </div>\n          <div>\n            <a href=\"https://dmitryshelomanov.github.io/tower_of_hanoi/\" target=\"_blank\">Towers of Hanoi</a>\n            <p>\n              Было интересно рассмотреть этот алгоритм. Задачу можно решить с помощью бота или самому (перетягивая кольца)\n            </p>\n          </div>\n          <div>\n            <a href=\"https://dmitryshelomanov.github.io/snake/\" target=\"_blank\">Snake AI</a>\n            <p>\n              В процессе разработке проекта я научился работать с графами.\n              В этом проекте можно увидеть визуализацию алгоритмов поиска пути (A*, Дейкстра и другие).\n              Визуализация в игровой форме - классическая змейка, так же можно поиграть против ботов\n            </p>\n          </div>\n          <div>\n            <a href=\"https://github.com/mobileFight\" target=\"_blank\">Мобитва next</a>\n            <a href=\"http://imobitva.ru/\" target=\"_blank\">(референс)</a>\n            <p>\n              Зародыш клона очень старой игры. Пишется на React + NodeJs.\n              Очень интересно реализовать систему квестов и систему боя (Pull requests are welcome)\n            </p>\n          </div>\n          <div>\n            <a href=\"https://dmitryshelomanov.github.io/music-player/\" target=\"_blank\">Музыкальный плеер</a>\n            <p>\n              Простенький плеер с визуализацией\n            </p>\n          </div>\n        </div>\n\n        <h2>Скилы</h2>\n\n        <div class=\"skills\">\n          <div>\n            <p>Языки</p>\n            <ul>\n              <li>HTML, CSS</li>\n              <li>JS</li>\n              <li>Reason</li>\n              <li>Rust</li>\n            </ul>\n          </div>\n          <div>\n            <p>Технологии</p>\n            <ul>\n              <li>React, Vue</li>\n              <li>Reason React</li>\n              <li>React Native</li>\n              <li>Webpack, gulp</li>\n              <li>Node js</li>\n              <li>Koa, Express</li>\n              <li>RxJs, RxDb</li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n\n</body></html>\n`;\n","import { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { createPortal } from \"react-dom\";\nimport { html } from \"@gui/assets/mock\";\nimport { useOverlay, useOverlayComponent } from \"@gui/lib/overlay\";\n\nconst Iframe = styled.iframe`\n  width: 100%;\n  flex: 1;\n  border: 0;\n  overflow: scroll;\n`;\n\nexport function WebPreview() {\n  const [ref, setRef] = useState<HTMLIFrameElement | null>(null);\n  const { setRoot, root } = useOverlay();\n  const jsx = useOverlayComponent();\n\n  const mountNode = root?.body;\n\n  const props =\n    process.env.NODE_ENV === \"development\"\n      ? {\n          srcDoc: html,\n        }\n      : {\n          src: \"https://dmitryshelomanov.github.io/\",\n        };\n\n  return (\n    <Iframe\n      ref={setRef}\n      {...props}\n      onLoad={() => {\n        if (ref?.contentWindow?.document) {\n          console.log(\"load\");\n          setRoot(ref?.contentWindow?.document);\n        }\n      }}\n    >\n      {mountNode && createPortal(jsx, mountNode)}\n    </Iframe>\n  );\n}\n","export type NodeAttr = {\n  name: string;\n  value: string;\n};\n\nexport type NodeParserResult = {\n  name: string;\n  node: HTMLElement;\n  children: NodeParserResult[];\n  value: string;\n  attrs: NodeAttr[];\n  id: number;\n};\n\nexport function nodeParser(elements: HTMLElement[]) {\n  const queue = [...elements];\n  const result: NodeParserResult[] = [];\n  const map = new WeakMap();\n  let id = 0;\n\n  while (queue.length > 0) {\n    const node = queue.shift()!;\n    // @ts-ignore\n    const nodes = node.childNodes as HTMLElement[];\n\n    const parentNode = node.parentElement ? map.get(node.parentElement) : null;\n\n    const attrs = node.attributes\n      ? [...node.attributes].map((it) => ({\n          name: it.name,\n          value: it.value,\n        }))\n      : [];\n\n    const nodeInfo = {\n      name: node.localName || node.nodeName,\n      children: [],\n      value: node.textContent?.replace(/  +|\\n/gi, \" \")?.trim() ?? \"\",\n      node,\n      attrs,\n      id,\n    };\n\n    const isEmpty =\n      (nodeInfo.name === \"#text\" || nodeInfo.name === \"#comment\") &&\n      nodeInfo.value === \"\";\n\n    if (parentNode && !isEmpty) {\n      // @ts-ignore\n      parentNode.children.push(nodeInfo);\n    }\n\n    if (!parentNode) {\n      result.push(nodeInfo);\n    }\n\n    map.set(node, nodeInfo);\n    queue.unshift(...[...nodes]);\n\n    id += 1;\n  }\n\n  return result;\n}\n","export function getElementFromXPath(path: string, root?: Document) {\n  const targert = root ?? document;\n  const result: HTMLElement[] = [];\n  const nodesSnapshot = document.evaluate(\n    path,\n    targert,\n    null,\n    XPathResult.ORDERED_NODE_SNAPSHOT_TYPE,\n    null\n  );\n\n  for (var i = 0; i < nodesSnapshot.snapshotLength; i++) {\n    const node = nodesSnapshot.snapshotItem(i);\n\n    if (node) {\n      // @ts-ignore\n      result.push(node);\n    }\n  }\n\n  return result;\n}\n\nexport function getXpathFromElement(el: HTMLElement): string {\n  if (!el || el.nodeType != 1) {\n    return \"\";\n  }\n\n  if (el.id) {\n    return \"//*[@id='\" + el.id + \"']\";\n  }\n\n  const sames = [].filter.call(\n    el.parentNode?.children,\n    (x: HTMLElement) => x.tagName == el.tagName\n  );\n\n  return (\n    // @ts-ignore\n    getXpathFromElement(el.parentNode) +\n    \"/\" +\n    el.tagName.toLowerCase() +\n    // @ts-ignore\n    (sames.length > 1 ? \"[\" + ([].indexOf.call(sames, el) + 1) + \"]\" : \"\")\n  );\n}\n\nexport const xpathTransformers = {\n  removeLast: (xpath: string) => xpath.split(\"/\").slice(0, -1).join(\"/\"),\n  attachAllChildren: (xpath: string, childTag?: string) =>\n    `${xpath}/${childTag ?? \"*\"}`,\n};\n","import { Dialog } from \"evergreen-ui\";\n\nexport function ModalUI({\n  children,\n  isOpened,\n  closeModal,\n  onConfirm,\n  confirmLabel,\n  width,\n}: {\n  children: JSX.Element;\n  closeModal: () => void;\n  isOpened: boolean;\n  onConfirm?: () => void;\n  confirmLabel?: string;\n  width?: string;\n}) {\n  return (\n    <Dialog\n      width={width}\n      confirmLabel={confirmLabel}\n      isShown={isOpened}\n      title=\"Token settings\"\n      onCloseComplete={closeModal}\n      onConfirm={onConfirm}\n    >\n      {children}\n    </Dialog>\n  );\n}\n","import { BrowserRouter, Route } from \"react-router-dom\";\nimport { Pane, Text, TextInput, Heading } from \"evergreen-ui\";\nimport styled from \"styled-components\";\n\nconst Wrapper = styled.div`\n  flex: 1;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100%;\n  flex-direction: column;\n`;\n\nconst Head = styled(Heading)`\n  margin-bottom: 12px;\n`;\n\nexport function Stub() {\n  return (\n    <Wrapper>\n      <Head size={900}>Set site url or paste code</Head>\n      <TextInput\n        value=\"https://dmitryshelomanov.github.io/\"\n        disabled\n        size=\"large\"\n      />\n    </Wrapper>\n  );\n}\n","import styled from \"styled-components\";\n\ntype Props = {\n  jc?: \"space-between\" | \"space-around\" | \"flex-start\" | \"flex-end\";\n  ai?: \"center\" | \"flex-start\" | \"fle-end\";\n};\n\nexport const Col = styled.div<Props>`\n  display: flex;\n  justify-content: ${(p) => p.jc};\n  align-items: ${(p) => p.ai};\n  flex-direction: column;\n`;\n\nexport const Row = styled.div<Props>`\n  display: flex;\n  justify-content: ${(p) => p.jc};\n  align-items: ${(p) => p.ai};\n  flex-direction: row;\n`;\n","import { tree, flattenTree, Token } from \"@gui/lib/gui\";\nimport { combine, createEvent, createStore } from \"effector\";\nimport { createMock } from \"./mock\";\n\nexport const addToken = createEvent<Omit<Token, \"children\">>();\nexport const addChildren =\n  createEvent<{ token: Omit<Token, \"children\">; parentId: string }>();\nexport const removeToken = createEvent<{ parentId?: string; id: string }>();\n\nexport const $tokensScheme = createStore<Record<string, Token>>(createMock())\n  .on(addToken, (tree, token) => flattenTree.addToken({ tree, token }))\n  .on(addChildren, (tree, { token, parentId }) =>\n    flattenTree.addChild({ tree, token, parentId })\n  )\n  .on(removeToken, (tree, { id, parentId }) =>\n    flattenTree.removeToken({ tree, parentId, tokenId: id })\n  );\n\nexport const $rootTokens = $tokensScheme.map(flattenTree.extractRoots);\n\nexport const $tokensCounter = $rootTokens.map((tokens) => tokens.length);\n\nexport const $tokensTree = combine(\n  { root: $rootTokens, scheme: $tokensScheme },\n  ({ root, scheme }) => tree.toTree(root, scheme, \"\")\n);\n","import { flattenTree } from \"@gui/lib/gui\";\n\nexport function createMock() {\n  if (process.env.NODE_ENV === \"production\") {\n    return flattenTree.create({\n      name: {\n        xpath: \"/html/body/div[1]/div[1]/div/h1\",\n        name: \"name\",\n        children: [],\n      },\n      currentPosition: {\n        xpath: \"/html/body/div[1]/div[1]/div/p\",\n        name: \"currentPosition\",\n        children: [],\n      },\n      expirience: {\n        xpath: \"/html/body/div[1]/div[2]/div[1]/div\",\n        name: \"expirience\",\n        children: [\"company\", \"position\"],\n      },\n      company: {\n        xpath: \"/h3\",\n        name: \"company\",\n        children: [],\n        parentId: \"expirience\",\n      },\n      position: {\n        xpath: \"/p[1]\",\n        name: \"position\",\n        children: [],\n        parentId: \"expirience\",\n      },\n    });\n  }\n\n  return flattenTree.create();\n}\n","import { format } from \"@gui/lib/codegen/prettier\";\nimport { wrapp } from \"@gui/lib/codegen/tokens\";\nimport { createEvent, createStore } from \"effector\";\nimport { removeToken } from \"./tokens\";\n\nexport type Editor = { opened: boolean; code: string };\n\nconst initalState = {\n  opened: true,\n  code: format(\n    wrapp({\n      name: \"transformer\",\n      body: [\"return textExtractor(element)\"],\n      args: [\"[element]\"],\n      notice: `\n        import {textExtractor} from 'gui'\n\n        // Код запускается на сервере принимая на вход HTMLElement[]\n      `,\n    })\n  ),\n};\n\nexport const openEditor = createEvent<string>();\nexport const closeEditor = createEvent<string>();\nexport const changeCode = createEvent<{ id: string; code: string }>();\n\nexport const $editors = createStore<Record<string, Editor>>({})\n  .on(openEditor, (state, id) => ({\n    ...state,\n    [id]: state[id] ? { ...state[id], opened: true } : initalState,\n  }))\n  .on(closeEditor, (state, id) => ({\n    ...state,\n    [id]: { ...state[id], opened: false },\n  }))\n  .on(changeCode, (state, { id, code }) => ({\n    ...state,\n    [id]: { ...state[id], code },\n  }));\n\nexport const $openedEditors = $editors.map((editors) =>\n  Object.keys(editors).filter((id) => editors[id].opened)\n);\n","import plugin from \"prettier/parser-babel\";\nimport { format as f } from \"prettier/standalone\";\n\nexport const format = (code: string) =>\n  f(code, { parser: \"babel\", plugins: [plugin] });\n","import { LIBS, PAGE } from \"./constants\";\n\nexport function attachLibs(type: string, body: string) {\n  const code = `\n    window.${LIBS}.${type} = ${body}\n  `;\n\n  return code;\n}\n\nexport function evulate({ body, args }: { body: string[]; args?: string[] }) {\n  const mappedArgs = args ? args.join(\", \") : \"\";\n  const code = `\n    // Code inside run in browser\n    // All args must pass to\n    return ${PAGE}.evulate((${mappedArgs}) => {\n      ${body.join(\";\")}\n    })\n  `;\n\n  return code;\n}\n\nexport function wrapp({\n  body,\n  name,\n  args,\n  notice,\n}: {\n  body: string[];\n  name: string;\n  args: string[];\n  notice?: string;\n}) {\n  const code = `\n    ${notice}\n    function ${name}(${args.join(\", \")}) {\n      ${body.join(\" \")} \n    }\n  `;\n\n  return code;\n}\n\nexport function returnS({\n  type,\n  fields,\n}: {\n  type: \"object\" | \"array\" | \"alone\";\n  fields: string[];\n}) {\n  switch (type) {\n    case \"object\":\n      return `\n        return {${fields.join(\",\")}}\n      `;\n\n    case \"array\":\n      return `\n          return [${fields.join(\",\")}]\n        `;\n\n    default:\n      return `\n          return ${fields.join(\",\")}\n        `;\n  }\n}\n","import { NodeParserResult } from \"@gui/lib/parser\";\nimport { getXpathFromElement, xpathTransformers } from \"@gui/lib/xpath\";\nimport { FullToken } from \"@gui/lib/gui\";\nimport { Col, ModalUI, Row } from \"@gui/ui/organisms\";\nimport { Pane, Text, Label, TextInput } from \"evergreen-ui\";\nimport { useMemo, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { addToken, addChildren } from \"./models\";\n\nconst PaneUI = styled(Pane)`\n  display: flex;\n  margin-bottom: 65px;\n  justify-content: space-between;\n  flex: 1 1 auto;\n`;\n\nconst PaneSettings = styled(Pane)`\n  flex: 1;\n  padding-left: 15px;\n`;\n\nconst FormWrapper = styled.div`\n  display: flex;\n  margin-top: 12px;\n  align-items: center;\n\n  > label {\n    margin: 0;\n    margin-right: 3;\n  }\n`;\n\nconst { removeLast, attachAllChildren } = xpathTransformers;\n\nexport function TokenModal({\n  node,\n  onClose,\n  parentToken,\n  fullXpath = \"\",\n}: {\n  node: NodeParserResult | null;\n  onClose: () => void;\n  parentToken?: FullToken;\n  fullXpath?: string;\n}) {\n  const [tokenName, setTokenName] = useState(\"\");\n\n  const xpath = useMemo(() => {\n    if (node) {\n      return getXpathFromElement(node.node);\n    }\n\n    return \"\";\n  }, [node]);\n\n  const [xpathPart, setXpathPart] = useState(xpath);\n\n  return (\n    <ModalUI\n      width=\"50vw\"\n      isOpened={!!node}\n      closeModal={onClose}\n      onConfirm={() => {\n        if (parentToken) {\n          addChildren({\n            token: { xpath: xpathPart, name: tokenName },\n            parentId: parentToken.name,\n          });\n        } else {\n          addToken({ xpath: xpathPart, name: tokenName });\n        }\n        onClose();\n      }}\n      confirmLabel={parentToken ? `Add child to ${parentToken.name}` : \"Create\"}\n    >\n      <PaneUI>\n        <PaneSettings>\n          <Col>\n            {node && (\n              <Row>\n                <Label>Classes: </Label>\n                <Text>\n                  {JSON.stringify(\n                    node.attrs.find((it) => it.name === \"class\")?.value\n                  )}\n                </Text>\n              </Row>\n            )}\n            <Row>\n              <Label>Full Xpath: </Label>\n              <Text>{xpathPart}</Text>\n            </Row>\n            <FormWrapper>\n              <Label>Custom Xpath: </Label>\n              <TextInput\n                value={xpathPart}\n                // @ts-ignore\n                onChange={(event) => setXpathPart(event.target.value)}\n                placeholder=\"Xpath part\"\n              />\n            </FormWrapper>\n          </Col>\n          <FormWrapper>\n            <Label>Token name: </Label>\n            <TextInput\n              value={tokenName}\n              // @ts-ignore\n              onChange={(event) => setTokenName(event.target.value)}\n            />\n          </FormWrapper>\n        </PaneSettings>\n      </PaneUI>\n    </ModalUI>\n  );\n}\n","import styled, { css } from \"styled-components\";\nimport { NodeAttr } from \"@gui/lib/parser\";\n\ntype BaseProps = {\n  lvl?: number;\n  onHover?: () => void;\n  onLeave?: () => void;\n  onClick?: () => void;\n  isActive?: boolean;\n};\n\nconst tabSize = 15;\n\nconst colors = {\n  tag: \"#7d1076\",\n  attributeValue: \"rgb(10, 48, 105)\",\n  attributeKey: \"#91461c\",\n  text: \"#30373e\",\n  commentColor: \"green\",\n};\n\nconst TagWrapper = styled.div<{ lvl?: number; isActive?: boolean }>`\n  color: ${colors.tag};\n  font-weight: bold;\n  display: block;\n  margin-left: ${(p) => (p.lvl ?? 0) * tabSize}px;\n  cursor: pointer;\n  transition: 0.2s;\n  font-size: 14px;\n\n  &:hover {\n    background-color: #ac5c5c37;\n  }\n\n  ${(p) =>\n    p.isActive &&\n    css`\n      background-color: #ac5c5c37;\n    `}\n`;\n\nconst TextWrapper = styled.div<{\n  lvl?: number;\n  isActive?: boolean;\n  isComment?: boolean;\n}>`\n  display: block;\n  margin-left: ${(p) => (p.lvl ?? 0) * tabSize}px;\n  cursor: pointer;\n  color: ${colors.text};\n  transition: 0.2s;\n  white-space: normal;\n  font-size: 14px;\n\n  &:hover {\n    background-color: #ac5c5c37;\n  }\n\n  ${(p) =>\n    p.isActive &&\n    css`\n      background-color: #ac5c5c37;\n    `}\n\n  ${(p) =>\n    p.isComment &&\n    css`\n      font-size: 12px;\n      color: ${colors.commentColor};\n    `}\n`;\n\nconst AttributesWrapper = styled.span`\n  font-weight: normal;\n  border: none;\n  background: none;\n  white-space: normal;\n  margin-left: 5px;\n`;\n\nexport const TreeContainer = styled.pre`\n  padding: 5px;\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  font-size: 14px;\n  overflow: scroll;\n  margin: 0;\n\n  > div {\n    font-weight: 100;\n  }\n`;\n\nexport function Tag({\n  name,\n  isOpened,\n  attributes = [],\n  lvl,\n  onLeave,\n  onHover,\n  ...props\n}: {\n  name: string;\n  isOpened: boolean;\n  attributes?: NodeAttr[];\n} & BaseProps) {\n  const start = isOpened ? \"<\" : \"</\";\n  const end = \">\";\n\n  return (\n    <TagWrapper\n      lvl={lvl}\n      onMouseEnter={onHover}\n      onMouseLeave={onLeave}\n      {...props}\n    >\n      {start}\n      {name}\n      {attributes.map((it) => (\n        <AttributesWrapper key={it.name}>\n          <span style={{ color: colors.attributeKey }}>{it.name}=</span>\n          <span style={{ color: colors.attributeValue }}>\"{it.value}\"</span>\n        </AttributesWrapper>\n      ))}\n      {end}\n    </TagWrapper>\n  );\n}\n\nexport function Text({\n  text,\n  lvl,\n  onHover,\n  onLeave,\n}: { text: string } & BaseProps) {\n  return (\n    <TextWrapper lvl={lvl} onMouseEnter={onHover} onMouseLeave={onLeave}>\n      {text}\n    </TextWrapper>\n  );\n}\n\nexport function Comment({ text, lvl }: { text: string } & BaseProps) {\n  return (\n    <TextWrapper lvl={lvl} isComment>\n      {\"<!-- \"}\n      {text}\n      {\" -->\"}\n    </TextWrapper>\n  );\n}\n","import { NodeParserResult } from \"@gui/lib/parser\";\nimport { WithActivePreviewNode, OverlayChange } from \"@gui/lib/overlay\";\nimport { Tag, Text, Comment } from \"./elements\";\n\nexport function NodeTree({\n  nodeList,\n  lvl = 0,\n  changeOverlayStyles,\n  draft = false,\n  onClick,\n}: {\n  nodeList: NodeParserResult[];\n  lvl?: number;\n  changeOverlayStyles?: (arg0: OverlayChange) => void;\n  draft?: boolean;\n  onClick?: (arg0: NodeParserResult) => void;\n}) {\n  return (\n    <>\n      {nodeList.map((node) => {\n        const props = {\n          onHover: () => {\n            if (changeOverlayStyles) {\n              changeOverlayStyles({ type: \"set\", payload: node.node });\n            }\n          },\n          onLeave: () => {\n            if (changeOverlayStyles) {\n              changeOverlayStyles({ type: \"reset\" });\n            }\n          },\n          onClick: () => {\n            if (onClick) {\n              onClick(node);\n            }\n          },\n        };\n\n        if (node.name === \"#text\") {\n          return <Text text={node.value} lvl={lvl} {...props} key={node.id} />;\n        }\n\n        if (node.name === \"#comment\") {\n          return <Comment text={node.value} lvl={lvl} key={node.id} />;\n        }\n\n        return (\n          <WithActivePreviewNode key={node.id} currentNode={node.node}>\n            {(isActive) => (\n              <>\n                <Tag\n                  name={node.name}\n                  isOpened\n                  lvl={lvl}\n                  attributes={node.attrs}\n                  {...props}\n                  key={`${node.id}-opened`}\n                  isActive={isActive}\n                />\n                <NodeTree\n                  nodeList={node.children}\n                  lvl={lvl + 1}\n                  changeOverlayStyles={changeOverlayStyles}\n                  key={`${node.id}-children`}\n                  draft={draft}\n                  onClick={onClick}\n                />\n                <Tag\n                  name={node.name}\n                  isOpened={false}\n                  lvl={lvl}\n                  {...props}\n                  key={`${node.id}-closed`}\n                  isActive={isActive}\n                />\n              </>\n            )}\n          </WithActivePreviewNode>\n        );\n      })}\n    </>\n  );\n}\n","import { Pane, Text, ChevronDownIcon, ChevronRightIcon } from \"evergreen-ui\";\nimport { memo, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Incpector from \"react-inspector\";\nimport { Col, Row } from \"@gui/ui/organisms\";\n\nconst NoticeWrapper = styled(Pane)`\n  padding: 12px;\n  max-height: 50%;\n  position: sticky;\n  bottom: 0;\n  width: 100%;\n  border-top: 1px solid #e5e8ef;\n  background: #fff;\n  margin-top: auto;\n`;\n\nconst InspectorWrapper = styled.div`\n  margin: 12px 0;\n`;\n\nexport const Notice = memo(\n  ({ result, children }: { result: any; children?: JSX.Element }) => {\n    const [opened, setOpened] = useState(true);\n\n    const toggle = () => {\n      setOpened((prev) => !prev);\n    };\n\n    return (\n      <NoticeWrapper>\n        <Row jc=\"flex-end\" ai=\"center\" onClick={toggle}>\n          <Text>Board</Text>\n          {opened ? <ChevronDownIcon /> : <ChevronRightIcon />}\n        </Row>\n        {opened && (\n          <>\n            <Col>\n              {result && (\n                <InspectorWrapper>\n                  <Incpector data={result} expandLevel={10} />\n                </InspectorWrapper>\n              )}\n              {children}\n            </Col>\n          </>\n        )}\n      </NoticeWrapper>\n    );\n  }\n);\n","import { useStore } from \"effector-react\";\nimport {\n  Pane,\n  Text,\n  ChevronRightIcon,\n  ChevronUpIcon,\n  EditIcon,\n  RemoveIcon,\n} from \"evergreen-ui\";\nimport { useCallback, useMemo, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { NodeTree, TreeContainer } from \"@gui/features/common\";\nimport { useOverlay } from \"@gui/lib/overlay\";\nimport { nodeParser, NodeParserResult } from \"@gui/lib/parser\";\nimport { getElementFromXPath } from \"@gui/lib/xpath\";\nimport { FullToken, tree } from \"@gui/lib/gui\";\nimport { Col, Row } from \"@gui/ui/organisms\";\nimport { TokenModal } from \"../Modal\";\nimport { openEditor, $tokensTree, removeToken } from \"../models\";\nimport { Notice } from \"./Notice\";\nimport { ChildTypesSelect } from \"./childTypeSelect\";\n\nconst TokensWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  position: relative;\n  overflow: scroll;\n`;\n\nconst PaneUI = styled(Pane)`\n  margin: 5px;\n  padding: 8px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  flex-direction: column;\n  background: #fff !important;\n`;\n\nconst ShortInformation = styled(Row)`\n  width: 100%;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst Additional = styled(Col)`\n  width: 100%;\n  justify-content: center;\n  align-items: flex-start;\n  margin-top: 12px;\n  border-top: 1px solid #e5e8ee;\n`;\n\nconst Icons = styled.div`\n  margin: 0 5px;\n  cursor: pointer;\n`;\n\nconst ChildrenWrapper = styled.div`\n  width: 100%;\n`;\n\nfunction TokenItem({ token }: { token: FullToken }) {\n  const [visible, setVisible] = useState(false);\n  const { root, changeOverlayStyles } = useOverlay();\n  const elements = root ? getElementFromXPath(token.fullXpath, root) : [];\n  const parsed = elements ? nodeParser(elements) : [];\n  const [selectedNode, setSelectedNode] = useState<NodeParserResult | null>(\n    null\n  );\n\n  const toggleVisible = () => {\n    setVisible((prev) => !prev);\n  };\n\n  return (\n    <PaneUI border=\"default\" key={token.name}>\n      <ShortInformation>\n        <Col>\n          <Text>\n            Token name: <b>{token.name}</b>\n          </Text>\n          <Text>\n            Xpath: <b>{token.xpath}</b>\n          </Text>\n          <Text>\n            Children count: <b>{elements.length}</b>\n          </Text>\n        </Col>\n        <Row ai=\"center\">\n          <Icons>\n            {visible ? (\n              <ChevronUpIcon onClick={toggleVisible} />\n            ) : (\n              <ChevronRightIcon onClick={toggleVisible} />\n            )}\n          </Icons>\n          <Icons>\n            <RemoveIcon\n              onClick={() => {\n                removeToken({ id: token.name, parentId: token.parentId });\n              }}\n            />\n          </Icons>\n        </Row>\n      </ShortInformation>\n      <ChildrenWrapper>\n        {token.children &&\n          token.children.map((it) => <TokenItem token={it} key={it.name} />)}\n      </ChildrenWrapper>\n      {visible && (\n        <Additional>\n          {parsed && (\n            <TreeContainer>\n              <NodeTree\n                draft\n                nodeList={parsed}\n                onClick={setSelectedNode}\n                changeOverlayStyles={changeOverlayStyles}\n              />\n            </TreeContainer>\n          )}\n        </Additional>\n      )}\n      {selectedNode && (\n        <TokenModal\n          onClose={() => setSelectedNode(null)}\n          node={selectedNode}\n          parentToken={token}\n          fullXpath={token.fullXpath}\n        />\n      )}\n    </PaneUI>\n  );\n}\n\nexport function TokensList() {\n  const { root } = useOverlay();\n  const tokensTree = useStore($tokensTree);\n\n  const elementFinder = useCallback(\n    (xpath: string) => (root ? getElementFromXPath(xpath, root) : []),\n    [root]\n  );\n\n  const result = useMemo(\n    () =>\n      tree.traverse(tokensTree, {\n        mapper: (elements) => elements.map((it) => it.textContent),\n        finderByXpath: elementFinder,\n      }),\n    [elementFinder, tokensTree]\n  );\n\n  return (\n    <TokensWrapper>\n      {tokensTree.map((token) => (\n        <TokenItem token={token} key={token.name} />\n      ))}\n      <Notice result={result} />\n    </TokensWrapper>\n  );\n}\n","import AceEditor from \"react-ace\";\nimport \"ace-builds/src-noconflict/theme-solarized_light\";\nimport \"ace-builds/src-noconflict/mode-javascript\";\nimport \"ace-builds/src-min-noconflict/ext-searchbox\";\nimport \"ace-builds/src-min-noconflict/ext-language_tools\";\n\nimport AutoSizer from \"react-virtualized-auto-sizer\";\nimport styled from \"styled-components\";\n\nconst Wrapper = styled.div`\n  display: block;\n  width: 100%;\n  height: 100%;\n`;\n\nexport function CodeEditor({\n  value,\n  onChange,\n}: {\n  value?: string;\n  onChange?: (arg0: string) => void;\n}) {\n  return (\n    <Wrapper>\n      <AutoSizer>\n        {({ width, height }) => {\n          return (\n            <AceEditor\n              value={value}\n              onChange={(nextValue) => {\n                if (onChange) {\n                  onChange(nextValue);\n                }\n              }}\n              style={{ width, height }}\n              mode=\"javascript\"\n              theme=\"solarized_light\"\n              name=\"editor\"\n              editorProps={{ $blockScrolling: true }}\n              setOptions={{\n                enableBasicAutocompletion: true,\n                enableLiveAutocompletion: true,\n                enableSnippets: false,\n                showLineNumbers: true,\n                tabSize: 2,\n              }}\n            />\n          );\n        }}\n      </AutoSizer>\n    </Wrapper>\n  );\n}\n","import { getElementFromXPath, getXpathFromElement } from \"../xpath\";\n\nexport function textExtractor(el: HTMLElement) {\n  return el.textContent;\n}\n\nexport function classList(el: HTMLElement) {\n  return [...el.classList];\n}\n\nexport function $element(element: HTMLElement, selector: string) {\n  const findedElement = element.querySelector(selector);\n\n  if (findedElement) {\n    return findedElement;\n  }\n\n  throw new Error(\"element not fined: \" + selector);\n}\n\nexport function $$element(element: HTMLElement, selector: string) {\n  const findedElements = element.querySelectorAll(selector);\n\n  return findedElements;\n}\n\nexport const defaultLibs = {\n  $$element: $$element.toString(),\n  $element: $element.toString(),\n  classList: classList.toString(),\n  textExtractor: textExtractor.toString(),\n  getXpathFromElement: getXpathFromElement.toString(),\n  getElementFromXPath: getElementFromXPath.toString(),\n};\n","import { useStoreMap } from \"effector-react\";\nimport {\n  CrossIcon,\n  Pane,\n  Text,\n  Button,\n  ChevronDownIcon,\n  ChevronRightIcon,\n} from \"evergreen-ui\";\nimport { memo, useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Incpector from \"react-inspector\";\nimport { TreeContainer, NodeTree } from \"@gui/features/common\";\nimport { CodeEditor } from \"@gui/lib/editor\";\nimport { useOverlay } from \"@gui/lib/overlay\";\nimport { nodeParser } from \"@gui/lib/parser\";\nimport { executeTransformer } from \"@gui/lib/babel\";\nimport { defaultLibs } from \"@gui/lib/codegen/libs\";\nimport { getElementFromXPath } from \"@gui/lib/xpath\";\nimport { Col, Row } from \"@gui/ui/organisms\";\nimport { $editors, changeCode, closeEditor, $tokensScheme } from \"../models\";\n\nconst EditorWrapper = styled(Col)`\n  width: 100%;\n  height: 100%;\n`;\n\nconst NoticeWrapper = styled(Pane)`\n  padding: 12px;\n  max-height: 50%;\n`;\n\nconst InspectorWrapper = styled.div`\n  margin: 12px 0;\n`;\n\nexport function CloseEditorIcon({ id }: { id: string }) {\n  const parsedId = id.split(\"-\")[1];\n\n  return (\n    <CrossIcon\n      margin={8}\n      onClick={() => {\n        closeEditor(parsedId);\n      }}\n    />\n  );\n}\n\nconst Notice = memo(({ id }: { id: string }) => {\n  const [opened, setOpened] = useState(true);\n  const [result, setResult] = useState(null);\n  const { root, changeOverlayStyles } = useOverlay();\n\n  const token = useStoreMap({\n    store: $tokensScheme,\n    keys: [id],\n    fn: (tokens, [tokenId]) => tokens[tokenId] ?? null,\n  });\n\n  const { xpath = \"\" } = token ?? {};\n  const elements = getElementFromXPath(xpath, root);\n  const nodes = nodeParser(elements);\n\n  const code = useStoreMap({\n    store: $editors,\n    keys: [id],\n    fn: (editors, [tokenId]) => {\n      if (editors[tokenId]) {\n        const { code } = editors[tokenId];\n\n        return code;\n      }\n\n      return \"\";\n    },\n  });\n\n  const toggle = () => {\n    setOpened((prev) => !prev);\n  };\n\n  const execure = () => {\n    setResult(\n      executeTransformer({\n        code,\n        args: elements,\n        libs: defaultLibs,\n      })\n    );\n  };\n\n  return (\n    <NoticeWrapper>\n      <Row jc=\"flex-end\" ai=\"center\" onClick={toggle}>\n        <Text>Board</Text>\n        {opened ? <ChevronDownIcon /> : <ChevronRightIcon />}\n      </Row>\n      {opened && (\n        <>\n          <Button onClick={execure}>Test</Button>\n          <Col>\n            {result && (\n              <InspectorWrapper>\n                <Incpector data={{ [id]: result }} expandLevel={1} />\n              </InspectorWrapper>\n            )}\n            <TreeContainer>\n              <NodeTree\n                nodeList={nodes}\n                changeOverlayStyles={changeOverlayStyles}\n              />\n            </TreeContainer>\n          </Col>\n        </>\n      )}\n    </NoticeWrapper>\n  );\n});\n\nexport function TokenEditor({ id }: { id: string }) {\n  const parsedId = id.split(\"-\")[1];\n  const code = useStoreMap({\n    store: $editors,\n    keys: [parsedId],\n    fn: (editors, [tokenId]) => editors[tokenId].code,\n  });\n\n  return (\n    <EditorWrapper>\n      <CodeEditor\n        value={code}\n        onChange={(value) => {\n          changeCode({ id: parsedId, code: value });\n        }}\n      />\n      <Notice id={parsedId} key={parsedId} />\n    </EditorWrapper>\n  );\n}\n","import { useMemo, useState } from \"react\";\nimport { nodeParser, NodeParserResult } from \"@gui/lib/parser\";\nimport { useOverlay } from \"@gui/lib/overlay\";\nimport { TokenModal } from \"@gui/features/token-creator\";\nimport { NodeTree, TreeContainer } from \"@gui/features/common\";\n\nexport function CodePreview({ target }: { target: HTMLElement | null }) {\n  const { changeOverlayStyles } = useOverlay();\n  const [selectedNode, setSelectedNode] = useState<NodeParserResult | null>(\n    null\n  );\n\n  const nodeList = useMemo(\n    () => (target ? nodeParser([target]) : []),\n    [target]\n  );\n  const key = useMemo(() => (Math.random() * 10000).toString(), [target]);\n\n  if (!target) {\n    return null;\n  }\n\n  return (\n    <>\n      <TreeContainer>\n        <NodeTree\n          key={key}\n          nodeList={nodeList}\n          changeOverlayStyles={changeOverlayStyles}\n          onClick={setSelectedNode}\n        />\n      </TreeContainer>\n      {selectedNode && (\n        <TokenModal onClose={() => setSelectedNode(null)} node={selectedNode} />\n      )}\n    </>\n  );\n}\n","import { useEffect, useMemo, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { useStore } from \"effector-react\";\nimport { If, Switch, Then, Case } from \"react-if\";\nimport { Pane, Heading, Tablist, Tab, Paragraph, Pill } from \"evergreen-ui\";\nimport { OverlayProvider } from \"@gui/lib/overlay\";\nimport { WebPreview } from \"@gui/features/web-preview\";\nimport { CodePreview } from \"@gui/features/code-preview\";\nimport {\n  TokensList,\n  $openedEditors,\n  TokenEditor,\n  CloseEditorIcon,\n  openEditor,\n} from \"@gui/features/token-creator\";\nimport { $tokensCounter } from \"@gui/features/token-creator\";\n\nconst PaneUI = styled(Pane)`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  max-width: 50%;\n  overflow: scroll;\n`;\n\nconst TablistUI = styled(Tablist)`\n  padding: 13px;\n  margin: 0;\n  border-bottom: 1px solid #e5e8ef;\n  background-color: #fff;\n  z-index: 10;\n  position: sticky;\n  top: 0;\n`;\n\nconst Title = styled(Heading)`\n  padding: 15px;\n  border-bottom: 1px solid #e5e8ef;\n`;\n\nconst Wrapper = styled.div`\n  flex: 1;\n  height: 100vh;\n  margin: 0 16px;\n  display: flex;\n  overflow: hidden;\n`;\n\nexport function HomePage() {\n  const openedEditors = useStore($openedEditors);\n  const [element, setElement] = useState<HTMLElement | null>(null);\n  const [selectedTabName, setSelectedTabName] = useState(\"Code tools\");\n  const counter = useStore($tokensCounter);\n\n  const tabs = useMemo(\n    () => [\n      { name: \"Code tools\" },\n      { name: \"Tokens\" },\n      ...openedEditors.map((name) => ({ name: `editor-${name}` })),\n    ],\n    [openedEditors]\n  );\n\n  const selectedIndex = useMemo(\n    () => tabs.findIndex((tab) => tab.name === selectedTabName),\n    [selectedTabName, tabs]\n  );\n\n  useEffect(() => {\n    setSelectedTabName(\"Code tools\");\n  }, [element]);\n\n  useEffect(() => {\n    if (!tabs[selectedIndex]) {\n      setSelectedTabName(\"Code tools\");\n    }\n  }, [tabs, selectedIndex]);\n\n  useEffect(() => {\n    return openEditor.watch((id) => {\n      setSelectedTabName(`editor-${id}`);\n    });\n  }, [tabs]);\n\n  return (\n    <OverlayProvider elementClicked={setElement}>\n      <Wrapper>\n        <PaneUI border=\"default\">\n          <Title size={600}>Web preview</Title>\n          <WebPreview />\n        </PaneUI>\n        <PaneUI border=\"default\" style={{ background: \"#fcfdff\" }}>\n          <TablistUI marginRight={24}>\n            {tabs.map(({ name }, index) => (\n              <Tab\n                key={name}\n                id={name}\n                onSelect={() => setSelectedTabName(name)}\n                isSelected={index === selectedIndex}\n                aria-controls={`panel-${name}`}\n              >\n                {name}\n                {name === \"Tokens\" && (\n                  <Pill display=\"inline-flex\" margin={8} color=\"red\">\n                    {counter}\n                  </Pill>\n                )}\n                {name.startsWith(\"editor-\") && <CloseEditorIcon id={name} />}\n              </Tab>\n            ))}\n          </TablistUI>\n          <If condition={!!tabs[selectedIndex]}>\n            <Then>\n              <Switch>\n                <Case condition={tabs[0].name === tabs[selectedIndex]?.name}>\n                  {element ? (\n                    <CodePreview target={element} />\n                  ) : (\n                    <Paragraph size={400}>\n                      Тут будут отображаться выбранные элементы\n                    </Paragraph>\n                  )}\n                </Case>\n                <Case condition={tabs[1].name === tabs[selectedIndex]?.name}>\n                  <TokensList />\n                </Case>\n                <Case\n                  condition={tabs[selectedIndex]?.name.startsWith(\"editor-\")}\n                >\n                  <TokenEditor id={tabs[selectedIndex]?.name} />\n                </Case>\n              </Switch>\n            </Then>\n          </If>\n        </PaneUI>\n      </Wrapper>\n    </OverlayProvider>\n  );\n}\n","import { BrowserRouter, Route } from \"react-router-dom\";\nimport { GlobalStyle } from \"@gui/ui/styles\";\nimport { HomePage } from \"./home\";\n\nexport function RootRouter() {\n  return (\n    <>\n      <GlobalStyle />\n      <BrowserRouter>\n        <Route path=\"*\" component={HomePage} />\n      </BrowserRouter>\n    </>\n  );\n}\n","import ReactDOM from \"react-dom\";\nimport { RootRouter } from \"./pages\";\n\nconst root = document.getElementById(\"root\");\n\nReactDOM.render(<RootRouter />, root);\n","import { parse } from \"@babel/parser\";\nimport traverse from \"@babel/traverse\";\nimport {\n  ImportSpecifier,\n  ImportDefaultSpecifier,\n  ImportNamespaceSpecifier,\n} from \"@babel/types\";\nimport generate from \"@babel/generator\";\n\nexport function getFunctionFromCode({\n  code,\n  name,\n  body = false,\n}: {\n  code: string;\n  name: string;\n  body?: boolean;\n}) {\n  let result = \"\";\n  let params: string[] = [];\n  const ast = parse(code, { sourceType: \"module\" });\n\n  traverse(ast, {\n    FunctionDeclaration(path) {\n      if (path.node.id?.name === name) {\n        result = !body\n          ? generate(path.node).code\n          : generate(path.node.body).code;\n\n        params.push(...path.node.params.map((param) => generate(param).code));\n      }\n    },\n  });\n\n  return { result, params };\n}\n\nexport function getImportsFromGUI({ code }: { code: string }) {\n  let result: string[] = [];\n  const ast = parse(code, { sourceType: \"module\" });\n\n  function isImportSpecifier(\n    node: ImportDefaultSpecifier | ImportNamespaceSpecifier | ImportSpecifier\n  ): node is ImportSpecifier {\n    return node.type === \"ImportSpecifier\";\n  }\n\n  traverse(ast, {\n    ImportDeclaration(path) {\n      if (path.node.source.value === \"gui\") {\n        result = [...path.node.specifiers]\n          .filter(isImportSpecifier)\n          .reduce(\n            (acc: string[], it: ImportSpecifier) =>\n              it.imported.type === \"Identifier\"\n                ? [...acc, it.imported.name]\n                : acc,\n            []\n          );\n      }\n    },\n  });\n\n  return result;\n}\n"],"sourceRoot":""}